{"version":3,"sources":["webpack://personal-webapp/./server/context/isAuth.ts","webpack://personal-webapp/./server/helpers/color.ts","webpack://personal-webapp/./server/models/User.ts","webpack://personal-webapp/./server/models/index.ts","webpack://personal-webapp/./server/resolvers/index.ts","webpack://personal-webapp/./server/resolvers/users.ts","webpack://personal-webapp/./server/typeDefs.ts","webpack://personal-webapp/./server/validation/main.ts","webpack://personal-webapp/external \"@babel/runtime/helpers/asyncToGenerator\"","webpack://personal-webapp/external \"@babel/runtime/helpers/classCallCheck\"","webpack://personal-webapp/external \"@babel/runtime/helpers/createClass\"","webpack://personal-webapp/external \"@babel/runtime/helpers/defineProperty\"","webpack://personal-webapp/external \"@babel/runtime/helpers/taggedTemplateLiteral\"","webpack://personal-webapp/external \"@babel/runtime/regenerator\"","webpack://personal-webapp/external \"apollo-server-express\"","webpack://personal-webapp/external \"bcryptjs\"","webpack://personal-webapp/external \"cors\"","webpack://personal-webapp/external \"dotenv\"","webpack://personal-webapp/external \"express\"","webpack://personal-webapp/external \"jsonwebtoken\"","webpack://personal-webapp/external \"mongoose\"","webpack://personal-webapp/external \"path\"","webpack://personal-webapp/webpack/bootstrap","webpack://personal-webapp/webpack/runtime/compat get default export","webpack://personal-webapp/webpack/runtime/define property getters","webpack://personal-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://personal-webapp/webpack/runtime/make namespace object","webpack://personal-webapp/./server/index.ts"],"names":["config","path","__dirname","JWT_SECRET","process","env","isAuth","req","auth","headers","authorization","Error","token","split","decodedToken","jwt","userId","error","getColor","letters","color","i","Math","floor","random","schema","Schema","email","type","String","unique","required","password","ava","firstname","lastname","role","date","Date","model","Query","Q_Users","Mutation","M_Users","getUser","_","User","select","message","loginUser","_email","checkIsEmpty","checkIsEmail","checkIfExists","key","value","Modal","msg","user","comparePasswords","hPass","_id","registerUser","_firstname","_lastname","checkLength","params","max","isTrue","hashedPass","bcrypt","save","newUser","id","gql","Validation","trim","args","makeMsg","patern","match","length","min","isError","validated","Object","keys","forEach","isEmpty","JSON","stringify","param","_param","isEmail","isMin","isMax","findOne","record","isValidPassword","PORT","MONGO_USER","MONGO_PASS","MONGO_DB","NODE_ENV","isDev","app","express","use","cors","mongoose","useCreateIndex","useNewUrlParser","useUnifiedTopology","useFindAndModify","console","log","server","ApolloServer","resolvers","typeDefs","playground","context","res","applyMiddleware","get","sendFile","listen"],"mappings":"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","file":"server.js","sourcesContent":["import jwt from \"jsonwebtoken\"\r\nimport { config } from \"dotenv\"\r\nimport path from \"path\"\r\nconfig({ path: path.resolve(__dirname, \"../\", \"../\", \".env\") })\r\nconst { JWT_SECRET }: any = process.env\r\n\r\nconst isAuth = (req: {\r\n  headers: { authorization: string }\r\n}): { userId: string } => {\r\n  const auth = req && req.headers && req.headers.authorization\r\n\r\n  if (!auth) {\r\n    throw new Error(\"Access denied!\")\r\n  }\r\n\r\n  const token = auth.split(\" \")[1]\r\n  if (!token) {\r\n    throw new Error(\"Access denied!\")\r\n  }\r\n\r\n  let decodedToken: string\r\n  try {\r\n    const { userId }: any = jwt.verify(token, JWT_SECRET)\r\n    decodedToken = userId\r\n  } catch (error) {\r\n    throw new Error(\"Access denied!\")\r\n  }\r\n  if (!decodedToken) {\r\n    throw new Error(\"Access denied!\")\r\n  }\r\n\r\n  return {\r\n    userId: decodedToken,\r\n  }\r\n}\r\n\r\nexport default isAuth\r\n","export const getColor = () => {\r\n  const letters = \"0123456789ABCDEF\"\r\n  let color = \"#\"\r\n  for (var i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)]\r\n  }\r\n  return color\r\n}\r\n","import { Schema, model } from \"mongoose\"\r\n\r\nconst schema = new Schema({\r\n  email: { type: String, unique: true, required: true },\r\n  password: { type: String, required: true },\r\n  ava: {\r\n    type: String,\r\n    default: \"\",\r\n  },\r\n  color: { type: String, required: true },\r\n  firstname: { type: String, required: true },\r\n  lastname: { type: String, required: true },\r\n  role: {\r\n    type: String,\r\n    default: \"user\",\r\n    enum: [\"user\", \"admin\"],\r\n  },\r\n  date: { type: Date, required: true },\r\n})\r\n\r\nexport default model(\"User\", schema)\r\n","import User from \"./User\"\r\n\r\nexport { User }\r\n","import { Query as Q_Users, Mutation as M_Users } from \"./users\"\r\n\r\nexport default {\r\n  Query: {\r\n    ...Q_Users,\r\n  },\r\n  Mutation: {\r\n    ...M_Users,\r\n  },\r\n}\r\n","import {\r\n  checkIsEmpty,\r\n  checkIsEmail,\r\n  checkIfExists,\r\n  comparePasswords,\r\n  checkLength,\r\n} from \"../validation/main\"\r\nimport { User } from \"../models\"\r\nimport bcrypt from \"bcryptjs\"\r\nimport jwt from \"jsonwebtoken\"\r\nimport { config } from \"dotenv\"\r\nimport path from \"path\"\r\nimport { getColor } from \"../helpers/color\"\r\n\r\nconfig({ path: path.resolve(__dirname, \"../\", \"../\", \".env\") })\r\nconst { JWT_SECRET }: any = process.env\r\n\r\nconst Query = {\r\n  getUser(_: any, { userId }: any) {\r\n    try {\r\n      return User.findById(userId).select(\"-password\")\r\n    } catch (error) {\r\n      throw new Error(`Getting user data error: ${error.message}`)\r\n    }\r\n  },\r\n}\r\n\r\nconst Mutation = {\r\n  async loginUser(_: any, { email: _email, password }: any) {\r\n    try {\r\n      const { email }: { [key: string]: string } = checkIsEmpty({\r\n        email: _email,\r\n        password,\r\n      })\r\n      checkIsEmail({ email })\r\n\r\n      const user = await checkIfExists({\r\n        key: \"email\",\r\n        value: _email,\r\n        Modal: User,\r\n        msg: \"User with this email doesn't exists!\",\r\n      })\r\n      comparePasswords({ password, hPass: user.password })\r\n\r\n      const token = jwt.sign({ userId: user._id }, JWT_SECRET)\r\n      return { userId: user._id, token }\r\n    } catch (error) {\r\n      throw new Error(error.message)\r\n    }\r\n  },\r\n  async registerUser(\r\n    _: any,\r\n    {\r\n      firstname: _firstname,\r\n      lastname: _lastname,\r\n      email: _email,\r\n      password,\r\n      role,\r\n    }: any\r\n  ) {\r\n    try {\r\n      const { firstname, lastname, email }: { [key: string]: string } =\r\n        checkIsEmpty({\r\n          firstname: _firstname,\r\n          lastname: _lastname,\r\n          email: _email,\r\n          password,\r\n        })\r\n      checkLength({ params: { firstname, lastname }, max: 50 })\r\n      checkIsEmail({ email })\r\n\r\n      await checkIfExists({\r\n        key: \"email\",\r\n        value: _email,\r\n        Modal: User,\r\n        msg: \"User with this email is already exists, choose another one!\",\r\n        isTrue: true,\r\n      })\r\n\r\n      const hashedPass = bcrypt.hashSync(password, bcrypt.genSaltSync(12))\r\n\r\n      const user = new User({\r\n        email: _email,\r\n        firstname: _firstname,\r\n        lastname: _lastname,\r\n        password: hashedPass,\r\n        role,\r\n        color: getColor(),\r\n        date: new Date(),\r\n      })\r\n      const newUser = await user.save()\r\n\r\n      const token = jwt.sign({ userId: newUser._id }, JWT_SECRET)\r\n      return { userId: newUser.id, token }\r\n    } catch (error) {\r\n      throw new Error(error.message)\r\n    }\r\n  },\r\n}\r\n\r\nexport { Query, Mutation }\r\n","import { gql } from \"apollo-server-express\"\r\n\r\nexport default gql`\r\n  type User {\r\n    email: String!\r\n    ava: String\r\n    color: String!\r\n    firstname: String!\r\n    lastname: String!\r\n    role: String!\r\n    date: String!\r\n  }\r\n  type Auth {\r\n    userId: String\r\n    token: String\r\n  }\r\n  type Query {\r\n    getUser(userId: String!): User!\r\n  }\r\n  type Mutation {\r\n    loginUser(email: String!, password: String!): Auth!\r\n    registerUser(\r\n      firstname: String!\r\n      lastname: String!\r\n      email: String!\r\n      password: String!\r\n      role: String\r\n    ): Auth!\r\n  }\r\n`\r\n","import bcrypt from \"bcryptjs\"\r\n\r\ninterface IMsg {\r\n  msg?: string\r\n}\r\ninterface IMin extends IMsg {\r\n  min: number\r\n}\r\ninterface IMax extends IMsg {\r\n  max: number\r\n}\r\ninterface IIfexists {\r\n  key: string\r\n  value: string\r\n  Modal: any\r\n  msg: string\r\n  isTrue?: boolean\r\n}\r\ninterface ILength {\r\n  params: any\r\n  min?: number\r\n  max?: number\r\n  isMin?: boolean\r\n}\r\n\r\nexport class Validation {\r\n  value: string\r\n  msg: string\r\n  constructor(value: string) {\r\n    this.value = value\r\n    this.msg = \"\"\r\n  }\r\n  makeMsg(msg: string) {\r\n    this.msg += ` ${msg}`\r\n    this.msg = this.msg.trim()\r\n  }\r\n  isEmpty(args?: IMsg) {\r\n    if (!this.value.trim()) {\r\n      this.makeMsg((args && args.msg) || \"This field cannot be empty!\")\r\n    }\r\n    return this\r\n  }\r\n  isEmail(args?: IMsg) {\r\n    const patern = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g\r\n    if (!this.value.match(patern)) {\r\n      this.makeMsg((args && args.msg) || \"Email is not correct!\")\r\n    }\r\n    return this\r\n  }\r\n  isMin(args?: IMin) {\r\n    if (this.value.length < args.min) {\r\n      this.makeMsg(\r\n        (args && args.msg) ||\r\n          `This field must be longer than ${args.min} characters!`\r\n      )\r\n    }\r\n    return this\r\n  }\r\n  isMax(args?: IMax) {\r\n    if (this.value.length > args.max) {\r\n      this.makeMsg(\r\n        (args && args.msg) ||\r\n          `This field must be less than ${args.max} characters!`\r\n      )\r\n    }\r\n    return this\r\n  }\r\n}\r\n\r\nexport const checkIsEmpty = (params: { [key: string]: string }) => {\r\n  let isError = false\r\n  const validated = {}\r\n  Object.keys(params).forEach((key) => {\r\n    validated[key] = new Validation(params[key]).isEmpty()\r\n    if (validated[key].msg.length && !isError) {\r\n      isError = true\r\n    }\r\n  })\r\n  if (isError) {\r\n    throw new Error(JSON.stringify(validated))\r\n  }\r\n  return validated\r\n}\r\n\r\nexport const checkIsEmail = (param: any) => {\r\n  let _param\r\n  if (param.email instanceof Validation) {\r\n    _param = param.email.isEmail()\r\n  } else {\r\n    _param = new Validation(param.email).isEmail()\r\n  }\r\n  if (_param.msg.length) {\r\n    throw new Error(JSON.stringify({ email: _param }))\r\n  }\r\n  return _param\r\n}\r\n\r\nexport const checkLength = ({ params, min, max }: ILength) => {\r\n  let isError = false\r\n  const validated = {}\r\n  Object.keys(params).forEach((key) => {\r\n    if (params[key] instanceof Validation) {\r\n      if (min && max) {\r\n        validated[key] = params[key].isMin({ min }).isMax({ max })\r\n      } else if (min) {\r\n        validated[key] = params[key].isMin({ min })\r\n      } else if (max) {\r\n        validated[key] = params[key].isMax({ max })\r\n      }\r\n    } else {\r\n      validated[key] = new Validation(params[key])\r\n      if (min && max) {\r\n        validated[key] = validated[key].isMin({ min }).isMax({ max })\r\n      } else if (min) {\r\n        validated[key] = validated[key].isMin({ min })\r\n      } else if (max) {\r\n        validated[key] = validated[key].isMax({ max })\r\n      }\r\n    }\r\n    if (validated[key].msg.length && !isError) {\r\n      isError = true\r\n    }\r\n  })\r\n  if (isError) {\r\n    throw new Error(JSON.stringify(validated))\r\n  }\r\n  return validated\r\n}\r\n\r\nexport const checkIfExists = async ({\r\n  key,\r\n  value,\r\n  Modal,\r\n  msg,\r\n  isTrue,\r\n}: IIfexists) => {\r\n  const record: any = await Modal.findOne({ [key]: value })\r\n  if (record && isTrue && Object.keys(record).length) {\r\n    throw new Error(JSON.stringify({ [key]: { msg, value } }))\r\n  }\r\n  return record\r\n}\r\n\r\nexport const comparePasswords = ({ password, hPass }) => {\r\n  const isValidPassword = bcrypt.compareSync(password, hPass)\r\n  if (!isValidPassword) {\r\n    throw new Error(\r\n      JSON.stringify({\r\n        password: {\r\n          msg: \"Password is wrong, try another one!\",\r\n          value: password,\r\n        },\r\n      })\r\n    )\r\n  }\r\n}\r\n","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");;","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");;","module.exports = require(\"@babel/runtime/helpers/createClass\");;","module.exports = require(\"@babel/runtime/helpers/defineProperty\");;","module.exports = require(\"@babel/runtime/helpers/taggedTemplateLiteral\");;","module.exports = require(\"@babel/runtime/regenerator\");;","module.exports = require(\"apollo-server-express\");;","module.exports = require(\"bcryptjs\");;","module.exports = require(\"cors\");;","module.exports = require(\"dotenv\");;","module.exports = require(\"express\");;","module.exports = require(\"jsonwebtoken\");;","module.exports = require(\"mongoose\");;","module.exports = require(\"path\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import express from \"express\"\r\nimport { ApolloServer, gql } from \"apollo-server-express\"\r\nimport path from \"path\"\r\nimport mongoose from \"mongoose\"\r\nimport { config } from \"dotenv\"\r\nimport typeDefs from \"./typeDefs\"\r\nimport resolvers from \"./resolvers\"\r\nimport isAuth from \"./context/isAuth\"\r\nimport cors from \"cors\"\r\n\r\nconfig({ path: path.resolve(__dirname, \"../\", \".env\") })\r\nconst { PORT, MONGO_USER, MONGO_PASS, MONGO_DB, NODE_ENV } = process.env\r\nconst isDev = NODE_ENV === \"development\"\r\n\r\n;(async () => {\r\n  try {\r\n    const app = express()\r\n    app.use(cors())\r\n\r\n    await mongoose.connect(\r\n      `mongodb+srv://${MONGO_USER}:${MONGO_PASS}@cluster0.osxef.mongodb.net/${MONGO_DB}?retryWrites=true&w=majority`,\r\n      {\r\n        useCreateIndex: true,\r\n        useNewUrlParser: true,\r\n        useUnifiedTopology: true,\r\n        useFindAndModify: false,\r\n      },\r\n      () => console.log(\"MongoDB started successfully!\")\r\n    )\r\n\r\n    const server = new ApolloServer({\r\n      resolvers,\r\n      typeDefs,\r\n      playground: isDev,\r\n      context: ({ req, res }: { req: any; res: any }) => ({\r\n        req,\r\n        res,\r\n        isAuth: () => isAuth(req),\r\n      }),\r\n    })\r\n    server.applyMiddleware({ app })\r\n\r\n    if (!isDev) {\r\n      app.use(express.static(path.join(__dirname, \"../\", \"client\")))\r\n      app.get(\"/*\", function (req, res) {\r\n        res.sendFile(path.join(__dirname, \"../\", \"client\", \"index.html\"))\r\n      })\r\n    }\r\n\r\n    app.listen(PORT, () => console.log(`Server started on port: ${PORT}`))\r\n  } catch (error) {\r\n    console.error(`Server error: ${error.message}`)\r\n  }\r\n})()\r\n"],"sourceRoot":""}